# Python
from threading import Thread

# External
from numpy import uint8

# Local
import core.cpu.instructions as instr
from core.opcodes import Opcode
from .flags import Flag
from .registers import Register

class CPU(Thread):
    def __init__(self, *args, **kwargs):
        Thread.__init__(self, *args, **kwargs)
        self._registers = {
            'a': Register(uint8), 
            'b': Register(uint8), 
            'c': Register(uint8), 
            'd': Register(uint8), 
            'e': Register(uint8), 
            'h': Register(uint8), 
            'l': Register(uint8)
        }

        self._flags = {
            's': Flag(uint8), 
            'z': Flag(uint8), 
            'p': Flag(uint8), 
            'c': Flag(uint8), 
            'ac': Flag(uint8), 
            'pad': Flag(uint8)
        }

        self._sp = Register(uint8)
        self._pc = Register(uint8)

        self._instructions = {
            Opcode.NOP:     instr.NOPInstruction(self), 
            Opcode.LXI_B:   instr.LXIInstruction(self), 
            Opcode.STAX_B:  instr.STAXInstruction(self), 
            Opcode.INX_B:   instr.INXInstruction(self), 
            Opcode.INR_B:   instr.INRInstruction(self), 
            Opcode.DCR_B:   instr.DCRInstruction(self), 
            Opcode.MVI_B:   instr.MVIInstruction(self), 
            Opcode.RLC:     instr.RLCInstruction(self), 
            Opcode.NOP_8:   instr.NOPInstruction(self), 
            Opcode.DAD_B:   instr.DADInstruction(self), 
            Opcode.LDAX_B:  instr.LDAXInstruction(self), 
            Opcode.DCX_B:   instr.DCXInstruction(self), 
            Opcode.INR_C:   instr.INRInstruction(self), 
            Opcode.DCR_C:   instr.DCRInstruction(self), 
            Opcode.MVI_C:   instr.MVIInstruction(self), 
            Opcode.RRC:     instr.RRCInstruction(self), 

            Opcode.NOP_10:  instr.NOPInstruction(self), 
            Opcode.LXI_D:   instr.LXIInstruction(self), 
            Opcode.STAX_D:  instr.STAXInstruction(self), 
            Opcode.INX_D:   instr.INXInstruction(self), 
            Opcode.INR_D:   instr.INRInstruction(self), 
            Opcode.DCR_D:   instr.DCRInstruction(self), 
            Opcode.MVI_D:   instr.MVIInstruction(self), 
            Opcode.RAL:     instr.RALInstruction(self), 
            Opcode.NOP_18:  instr.NOPInstruction(self), 
            Opcode.DAD_D:   instr.DADInstruction(self), 
            Opcode.LDAX_D:  instr.LDAXInstruction(self), 
            Opcode.DCX_D:   instr.DCXInstruction(self), 
            Opcode.INR_E:   instr.INRInstruction(self), 
            Opcode.DCR_E:   instr.DCRInstruction(self), 
            Opcode.MVI_E:   instr.MVIInstruction(self), 
            Opcode.RAR:     instr.RARInstruction(self), 

            Opcode.NOP_20:  instr.NOPInstruction(self), 
            Opcode.LXI_H:   instr.LXIInstruction(self), 
            Opcode.SHLD:    instr.SHLDInstruction(self), 
            Opcode.INX_H:   instr.INXInstruction(self), 
            Opcode.INR_H:   instr.INRInstruction(self), 
            Opcode.DCR_H:   instr.DCRInstruction(self), 
            Opcode.MVI_H:   instr.MVIInstruction(self), 
            Opcode.DAA:     instr.DAAInstruction(self), 
            Opcode.NOP_28:  instr.NOPInstruction(self), 
            Opcode.DAD_H:   instr.DADInstruction(self), 
            Opcode.LHLD:    instr.LHLDInstruction(self), 
            Opcode.DCX_H:   instr.DCXInstruction(self), 
            Opcode.INR_L:   instr.INRInstruction(self), 
            Opcode.DCR_L:   instr.DCRInstruction(self), 
            Opcode.MVI_L:   instr.MVIInstruction(self), 
            Opcode.CMA:     instr.CMAInstruction(self), 

            Opcode.NOP_30:  instr.NOPInstruction(self), 
            Opcode.LXI_SP:  instr.LXIInstruction(self), 
            Opcode.STA:     instr.STAInstruction(self), 
            Opcode.INX_SP:  instr.INXInstruction(self), 
            Opcode.INR_M:   instr.INRInstruction(self), 
            Opcode.DCR_M:   instr.DCRInstruction(self), 
            Opcode.MVI_M:   instr.MVIInstruction(self), 
            Opcode.STC:     instr.STCInstruction(self), 
            Opcode.NOP_38:  instr.NOPInstruction(self), 
            Opcode.DAD_SP:  instr.DADInstruction(self), 
            Opcode.LDA:     instr.LDAInstruction(self), 
            Opcode.DCX_SP:  instr.DCXInstruction(self), 
            Opcode.INR_A:   instr.INRInstruction(self), 
            Opcode.DCR_A:   instr.DCRInstruction(self), 
            Opcode.MVI_A:   instr.MVIInstruction(self), 
            Opcode.CMC:     instr.CMCInstruction(self), 

            Opcode.MOV_B_B: instr.MOVInstruction(self), 
            Opcode.MOV_B_C: instr.MOVInstruction(self), 
            Opcode.MOV_B_D: instr.MOVInstruction(self), 
            Opcode.MOV_B_E: instr.MOVInstruction(self), 
            Opcode.MOV_B_H: instr.MOVInstruction(self), 
            Opcode.MOV_B_L: instr.MOVInstruction(self), 
            Opcode.MOV_B_M: instr.MOVInstruction(self), 
            Opcode.MOV_B_A: instr.MOVInstruction(self), 
            Opcode.MOV_C_B: instr.MOVInstruction(self), 
            Opcode.MOV_C_C: instr.MOVInstruction(self), 
            Opcode.MOV_C_D: instr.MOVInstruction(self), 
            Opcode.MOV_C_E: instr.MOVInstruction(self), 
            Opcode.MOV_C_H: instr.MOVInstruction(self), 
            Opcode.MOV_C_L: instr.MOVInstruction(self), 
            Opcode.MOV_C_M: instr.MOVInstruction(self), 
            Opcode.MOV_C_A: instr.MOVInstruction(self), 

            Opcode.MOV_D_B: instr.MOVInstruction(self), 
            Opcode.MOV_D_C: instr.MOVInstruction(self), 
            Opcode.MOV_D_D: instr.MOVInstruction(self), 
            Opcode.MOV_D_E: instr.MOVInstruction(self), 
            Opcode.MOV_D_H: instr.MOVInstruction(self), 
            Opcode.MOV_D_L: instr.MOVInstruction(self), 
            Opcode.MOV_D_M: instr.MOVInstruction(self), 
            Opcode.MOV_D_A: instr.MOVInstruction(self), 
            Opcode.MOV_E_B: instr.MOVInstruction(self), 
            Opcode.MOV_E_C: instr.MOVInstruction(self), 
            Opcode.MOV_E_D: instr.MOVInstruction(self), 
            Opcode.MOV_E_E: instr.MOVInstruction(self), 
            Opcode.MOV_E_H: instr.MOVInstruction(self), 
            Opcode.MOV_E_L: instr.MOVInstruction(self), 
            Opcode.MOV_E_M: instr.MOVInstruction(self), 
            Opcode.MOV_E_A: instr.MOVInstruction(self), 

            Opcode.MOV_H_B: instr.MOVInstruction(self), 
            Opcode.MOV_H_C: instr.MOVInstruction(self), 
            Opcode.MOV_H_D: instr.MOVInstruction(self), 
            Opcode.MOV_H_E: instr.MOVInstruction(self), 
            Opcode.MOV_H_H: instr.MOVInstruction(self), 
            Opcode.MOV_H_L: instr.MOVInstruction(self), 
            Opcode.MOV_H_M: instr.MOVInstruction(self), 
            Opcode.MOV_H_A: instr.MOVInstruction(self), 
            Opcode.MOV_L_B: instr.MOVInstruction(self), 
            Opcode.MOV_L_C: instr.MOVInstruction(self), 
            Opcode.MOV_L_D: instr.MOVInstruction(self), 
            Opcode.MOV_L_E: instr.MOVInstruction(self), 
            Opcode.MOV_L_H: instr.MOVInstruction(self), 
            Opcode.MOV_L_L: instr.MOVInstruction(self), 
            Opcode.MOV_L_M: instr.MOVInstruction(self), 
            Opcode.MOV_L_A: instr.MOVInstruction(self), 

            Opcode.MOV_M_B: instr.MOVInstruction(self), 
            Opcode.MOV_M_C: instr.MOVInstruction(self), 
            Opcode.MOV_M_D: instr.MOVInstruction(self), 
            Opcode.MOV_M_E: instr.MOVInstruction(self), 
            Opcode.MOV_M_H: instr.MOVInstruction(self), 
            Opcode.MOV_M_L: instr.MOVInstruction(self), 

            Opcode.HLT:     instr.HLTInstruction(self), 

            Opcode.MOV_M_A: instr.MOVInstruction(self), 
            Opcode.MOV_A_B: instr.MOVInstruction(self), 
            Opcode.MOV_A_C: instr.MOVInstruction(self), 
            Opcode.MOV_A_D: instr.MOVInstruction(self), 
            Opcode.MOV_A_E: instr.MOVInstruction(self), 
            Opcode.MOV_A_H: instr.MOVInstruction(self), 
            Opcode.MOV_A_L: instr.MOVInstruction(self), 
            Opcode.MOV_A_M: instr.MOVInstruction(self), 
            Opcode.MOV_A_A: instr.MOVInstruction(self), 

            Opcode.ADD_B:   instr.ADDInstruction(self), 
            Opcode.ADD_C:   instr.ADDInstruction(self), 
            Opcode.ADD_D:   instr.ADDInstruction(self), 
            Opcode.ADD_E:   instr.ADDInstruction(self), 
            Opcode.ADD_H:   instr.ADDInstruction(self), 
            Opcode.ADD_L:   instr.ADDInstruction(self), 
            Opcode.ADD_M:   instr.ADDInstruction(self), 
            Opcode.ADD_A:   instr.ADDInstruction(self),

            Opcode.ADC_B:   instr.ADCInstruction(self), 
            Opcode.ADC_C:   instr.ADCInstruction(self), 
            Opcode.ADC_D:   instr.ADCInstruction(self), 
            Opcode.ADC_E:   instr.ADCInstruction(self), 
            Opcode.ADC_H:   instr.ADCInstruction(self), 
            Opcode.ADC_L:   instr.ADCInstruction(self), 
            Opcode.ADC_M:   instr.ADCInstruction(self), 
            Opcode.ADC_A:   instr.ADCInstruction(self), 

            Opcode.SUB_B:   instr.SUBInstruction(self), 
            Opcode.SUB_C:   instr.SUBInstruction(self), 
            Opcode.SUB_D:   instr.SUBInstruction(self), 
            Opcode.SUB_E:   instr.SUBInstruction(self), 
            Opcode.SUB_H:   instr.SUBInstruction(self), 
            Opcode.SUB_L:   instr.SUBInstruction(self), 
            Opcode.SUB_M:   instr.SUBInstruction(self), 
            Opcode.SUB_A:   instr.SUBInstruction(self), 

            Opcode.SBB_B:   instr.SBBInstruction(self), 
            Opcode.SBB_C:   instr.SBBInstruction(self), 
            Opcode.SBB_D:   instr.SBBInstruction(self), 
            Opcode.SBB_E:   instr.SBBInstruction(self), 
            Opcode.SBB_H:   instr.SBBInstruction(self), 
            Opcode.SBB_L:   instr.SBBInstruction(self), 
            Opcode.SBB_M:   instr.SBBInstruction(self), 
            Opcode.SBB_A:   instr.SBBInstruction(self), 

            Opcode.ANA_B:   instr.ANAInstruction(self), 
            Opcode.ANA_C:   instr.ANAInstruction(self), 
            Opcode.ANA_D:   instr.ANAInstruction(self), 
            Opcode.ANA_E:   instr.ANAInstruction(self), 
            Opcode.ANA_H:   instr.ANAInstruction(self), 
            Opcode.ANA_L:   instr.ANAInstruction(self), 
            Opcode.ANA_M:   instr.ANAInstruction(self), 
            Opcode.ANA_A:   instr.ANAInstruction(self), 

            0xa8: instr.XRAInstruction(self), 
            0xa9: instr.XRAInstruction(self), 
            0xaa: instr.XRAInstruction(self), 
            0xab: instr.XRAInstruction(self), 
            0xac: instr.XRAInstruction(self), 
            0xad: instr.XRAInstruction(self), 
            0xae: instr.XRAInstruction(self), 
            0xaf: instr.XRAInstruction(self), 

            0xb0: instr.ORAInstruction(self), 
            0xb1: instr.ORAInstruction(self), 
            0xb2: instr.ORAInstruction(self), 
            0xb3: instr.ORAInstruction(self), 
            0xb4: instr.ORAInstruction(self), 
            0xb5: instr.ORAInstruction(self), 
            0xb6: instr.ORAInstruction(self), 
            0xb7: instr.ORAInstruction(self), 

            0xb8: instr.CMPInstruction(self), 
            0xb9: instr.CMPInstruction(self), 
            0xba: instr.CMPInstruction(self), 
            0xbb: instr.CMPInstruction(self), 
            0xbc: instr.CMPInstruction(self), 
            0xbd: instr.CMPInstruction(self), 
            0xbe: instr.CMPInstruction(self), 
            0xbf: instr.CMPInstruction(self), 

            0xc0: instr.RNZInstruction(self), 
            0xc1: instr.POPInstruction(self), 
            0xc2: instr.JNZInstruction(self), 
            0xc3: instr.JMPInstruction(self), 
            0xc4: instr.CNZInstruction(self), 
            0xc5: instr.PUSHInstruction(self), 
            0xc6: instr.ADIInstruction(self), 
            0xc7: instr.RSTInstruction(self), 
            0xc8: instr.RZInstruction(self), 
            0xc9: instr.RETInstruction(self), 
            0xca: instr.JZInstruction(self), 
            0xcb: instr.JMPInstruction(self), 
            0xcc: instr.CZInstruction(self), 
            0xcd: instr.CALLInstruction(self), 
            0xce: instr.ACIInstruction(self), 
            0xcf: instr.RSTInstruction(self), 

            0xd0: instr.RNCInstruction(self), 
            0xd1: instr.POPInstruction(self), 
            0xd2: instr.JNCInstruction(self), 
            0xd3: instr.OUTInstruction(self), 
            0xd4: instr.CNCInstruction(self), 
            0xd5: instr.PUSHInstruction(self), 
            0xd6: instr.SUIInstruction(self), 
            0xd7: instr.RSTInstruction(self), 
            0xd8: instr.RCInstruction(self), 
            0xd9: instr.RETInstruction(self), 
            0xda: instr.JCInstruction(self), 
            0xdb: instr.INInstruction(self), 
            0xdc: instr.CCInstruction(self), 
            0xdd: instr.CALLInstruction(self), 
            0xde: instr.SBIInstruction(self), 
            0xdf: instr.RSTInstruction(self), 

            0xe0: instr.RPOInstruction(self), 
            0xe1: instr.POPInstruction(self), 
            0xe2: instr.JPOInstruction(self), 
            0xe3: instr.XTHLInstruction(self), 
            0xe4: instr.CPOInstruction(self), 
            0xe5: instr.PUSHInstruction(self), 
            0xe6: instr.ANIInstruction(self), 
            0xe7: instr.RSTInstruction(self), 
            0xe8: instr.RPEInstruction(self), 
            0xe9: instr.PCHLInstruction(self), 
            0xea: instr.JPEInstruction(self), 
            0xeb: instr.XCHGInstruction(self), 
            0xec: instr.CPEInstruction(self), 
            0xed: instr.CALLInstruction(self), 
            0xee: instr.XRIInstruction(self), 
            0xef: instr.RSTInstruction(self), 

            0xf0: instr.RPInstruction(self), 
            0xf1: instr.POPInstruction(self), 
            0xf2: instr.JPInstruction(self), 
            0xf3: instr.DIInstruction(self), 
            0xf4: instr.CPInstruction(self), 
            0xf5: instr.PUSHInstruction(self), 
            0xf6: instr.ORIInstruction(self), 
            0xf7: instr.RSTInstruction(self), 
            0xf8: instr.RMInstruction(self), 
            0xf9: instr.SPHLInstruction(self), 
            0xfa: instr.JMInstruction(self), 
            0xfb: instr.EIInstruction(self), 
            0xfc: instr.CMInstruction(self), 
            0xfd: instr.CALLInstruction(self), 
            0xfe: instr.CPIInstruction(self), 
            0xff: instr.RSTInstruction(self) 
        }

    def run(self):
        print('Running CPU')
